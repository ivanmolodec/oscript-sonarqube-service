#Использовать 1connector

СсылкаНаСонар = ""; //http://localhost:9000
ИдПроекта = "";
ОперацияСонар = "wontfix"; //confirm; unconfirm; reopen; resolve; falsepositive; wontfix; close; setinreview; resolveasreviewed; resetastoreview

ИмяПользователя = ""; //Административный пользователь
Пароль = "";

Счетчик = 1;

ДопПараметрыЗапроса = Новый Структура();
ПараметрыАутентификация = Новый Структура;
ПараметрыАутентификация.Вставить("Пользователь", ИмяПользователя);
ПараметрыАутентификация.Вставить("Пароль", Пароль);
ДопПараметрыЗапроса.Вставить("Аутентификация", ПараметрыАутентификация);
ДопПараметрыЗапроса.Вставить("Таймаут", 6000);

Пока Истина Цикл
	
	Сообщить("Порция номер " + Счетчик);

	Запрос = СсылкаНаСонар + "/api/issues/search?componentKeys=" + ИдПроекта + "&resolved=false&p=1&ps=500";
	РезультатЗапроса = КоннекторHTTP.Get(Запрос, , ДопПараметрыЗапроса).Json();

	ОшибкиЗапроса = РезультатЗапроса["issues"];

	Если ОшибкиЗапроса.Количество() = 0 Тогда
		Прервать;
	КонецЕсли;

	МассивИдОшибок = "";

	Для Каждого ОшибкаЗапроса Из ОшибкиЗапроса Цикл
		МассивИдОшибок = МассивИдОшибок + "," + ОшибкаЗапроса["key"];
	КонецЦикла;

	МассивИдОшибок = Сред(МассивИдОшибок, 2);
	Запрос = СсылкаНаСонар + "/api/issues/bulk_change?issues=" + МассивИдОшибок + "&do_transition=" + ОперацияСонар;
	РезультатПеревода = КоннекторHTTP.Post(Запрос, , , ДопПараметрыЗапроса).Json();

	Если РезультатПеревода["failures"] <> 0 Тогда
		ВызватьИсключение("Возникла ошибка при переводе статуса issue в SonarQube " + МассивИдОшибок);
	КонецЕсли;

	Счетчик = Счетчик + 1;

КонецЦикла;